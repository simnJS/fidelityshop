const fs = require('fs');
const path = require('path');

// Chemin vers le dossier public
const publicDir = path.join(process.cwd(), 'public');
// Chemin vers le dossier uploads dans public
const uploadsDir = path.join(publicDir, 'uploads');

console.log("üìÇ Configuration du dossier d'uploads...");

// V√©rifier si le dossier public existe
if (!fs.existsSync(publicDir)) {
  console.log("Cr√©ation du dossier public...");
  fs.mkdirSync(publicDir);
}

// V√©rifier si le dossier uploads existe
if (!fs.existsSync(uploadsDir)) {
  console.log("Cr√©ation du dossier uploads...");
  fs.mkdirSync(uploadsDir);
}

// Cr√©er un fichier .gitkeep pour que le dossier soit pr√©serv√© dans Git
const gitkeepFile = path.join(uploadsDir, '.gitkeep');
if (!fs.existsSync(gitkeepFile)) {
  fs.writeFileSync(gitkeepFile, '');
}

// Cr√©er un fichier README.md dans le dossier uploads pour expliquer son utilisation
const readmeFile = path.join(uploadsDir, 'README.md');
const readmeContent = `# Dossier d'uploads

Ce dossier est utilis√© pour stocker les images t√©l√©charg√©es.

## Important
- Ce dossier doit √™tre accessible publiquement
- Il doit √™tre mont√© comme un volume dans Docker pour la persistance des donn√©es
- Les images stock√©es ici sont accessibles via /uploads/nom-du-fichier
`;

fs.writeFileSync(readmeFile, readmeContent);

console.log("‚úÖ Dossier d'uploads configur√© avec succ√®s!");
console.log(`üìÅ Chemin: ${uploadsDir}`);

// V√©rification des droits d'acc√®s
try {
  const testFile = path.join(uploadsDir, 'test-write-permission.tmp');
  fs.writeFileSync(testFile, 'Test write permission');
  fs.unlinkSync(testFile);
  console.log("‚úÖ Les permissions d'√©criture sont correctes.");
} catch (error) {
  console.error("‚ùå ERREUR: Impossible d'√©crire dans le dossier uploads. V√©rifiez les permissions:");
  console.error(error.message);
} 